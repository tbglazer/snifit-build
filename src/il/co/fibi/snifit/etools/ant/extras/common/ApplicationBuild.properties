# Common Messages
Common.coreException=CoreException: {0}
Common.projectNameNull=Project, {0}, is null 
Common.projectNameNotInWorkspace=Project, {0}, is not in Workspace
Common.projectNotOpen=Project, {0}, is not open
Common.indentedKeyValuePair=         {0}={1}
Common.missingProjectName=Must supply projectName
Common.invalidSeverityLevel=ERROR: Invalid SeverityLevel={0}, must be ERROR or WARNING or INFO
Common.invalidBuildType=ERROR: Invalid BuildType={0}, must be INCREMENTAL or FULL or CLEAN
Common.autoDeprecated=WARNING: buildtype 'auto' is deprecated, use 'incremental'
Common.readingProjectSet=Reading projectSet file at {0}
Common.noProjectReferences=NO PROJECT REFERENCES in ProjectSetFileName={0}
Common.missingProjectNameFromReference=Missing Project Name from project reference = {0}
Common.antProjectSetProjectNull=AntProjectSet projectName=null
Common.projectSetFileFinished=DONE. projectSetFileName={0}
Common.message=Message={0}
Common.missingProjectSetFileName=ERROR: Must supply projectSetFileName
Common.projectSetFileIsNotAFile=ERROR: is not a file, projectSetFileName={0}
Common.projectSetFileDoesNotExist=ERROR: does not exist, projectSetFileName={0}
Common.projectSetFileNonReadable=ERROR: cannot read file, projectSetFileName={0}
Common.exception=Exception={0}
Common.exportingProject=Exporting project: {0}
Common.importingFile=Importing file: {0}
Common.refreshingProject=Refreshing project: {0}
Common.buildingProject=Building project: {0}
Common.buildingWorkspace=Building workspace (type: {0})

# AntConsoleProgressMonitor
AntConsoleProgressMonitor.nullTask=AntConsoleProgressMonitor constructor-> create new nullTask
AntConsoleProgressMonitor.taskStart={0} (Begin)
AntConsoleProgressMonitor.taskEnd={0} (Done)
AntConsoleProgressMonitor.taskSetName={0} (SetName)
AntConsoleProgressMonitor.taskSubTask=... subtask: {0}
AntConsoleProgressMonitor.taskMessage={0} (Message) {1}
AntConsoleProgressMonitor.jobStart=... background task: {0} (Begin)
AntConsoleProgressMonitor.jobEnd=... background task: {0} (Done)
AntConsoleProgressMonitor.jobSubTask=... background task status: {0}
AntConsoleProgressMonitor.taskNullTaskMessage=nullTask: {0}

# CaptureBuildMessages
CaptureBuildMessages.startupMessage=CaptureBuildMessages action={0} searchString={1}
CaptureBuildMessages.failOnErrorMessageFound=FAILONERROR FOUND: {0}
CaptureBuildMessages.failOnErrorMessageMissing=FAILONERROR MISSING: {0}
CaptureBuildMessages.invalidSearchString=ERROR: {0} searchstring must be specified
CaptureBuildMessages.invalidAction=ERROR: invalid action={0}
CaptureBuildMessages.invalidMessageLevel=ERROR: invalid messageLevel={0}

# GetJavacErrorCount
GetJavacErrorCount.missingProjectName=GetJavacErrorCount: Must supply ProjectName

# GetProjectData
GetProjectData.retrievedProjectData=Retrieved following Project Data :
GetProjectData.cannotUnsetNature=ERROR: {0} !=null, CANNOT UNSET, setting to FALSE
GetProjectData.setProjectName=Setting projectName={0}

# ProjectBuild
ProjectBuild.finished=DONE.

# ProjectGetErrors
ProjectGetErrors.separator=----------
ProjectGetErrors.displayErrors1={0}. {1} in {2}
ProjectGetErrors.displayErrors2= (at line {0})    {1}
ProjectGetErrors.displayFailOnError=FAIL-ON-ERROR.  projectName={0}  errorCount={1}  errorMessage[1]={2}
							
# Project Import
project.open=project.open
project.refresh=project.refresh
project.create=project.create
ProjectImport.importProjectLocation=importing projectLocation={0}
ProjectImport.projectInfo=projectName={0} projectLocation={1}

# ProjectSetBuild
ProjectSetBuild.missingProjectReferences=some MISSING (NON-EXISTING) bypassed project references in ProjectSetFileName={0}
ProjectSetBuild.projectsToBuild=projects to build = {0}
ProjectSetBuild.missingProject=ERROR: MISSING {0} buildfile={1}
ProjectSetBuild.invokingBuild=invoking build.xml={0}
ProjectSetBuild.skippingMissingProject=WARNING: bypassing NON-EXISTING project={0}
ProjectSetBuild.skippingClosedProject=WARNING: bypassing CLOSED project={0}


# ProjectSetImport
ProjectSetImport.onlyExistingProjects=WARNING: only EXISTING (bypassed) project references in projectSetFileName={0}
ProjectSetImport.providerId=providerId={0}
ProjectSetImport.projectsToImport=projects to import = {0}
ProjectSetImport.missingUserIdPassword=''USERID='' parameter, but ProjectSetFile missing ''USERID:PASSWORD@'', reference={0}
ProjectSetImport.missingUserId=WARNING: no ''USERID='' parameter, but ProjectSetFile contains ''USERID:PASSWORD@'', reference={0}
ProjectSetImport.missingProviderType=providerType==null for ProjectSet providerId={0} in projectSetFileName={1}
ProjectSetImport.nullProjects=addToWorkspace projects==null
ProjectSetImport.projectImported=imported project[{0}]={1}
ProjectSetImport.autoDeleting=WARNING: autoDeleteProjects=true, so deleting EXISTING project={0}
ProjectSetImport.autoDeleteException=autoDeleteProject={0} CoreException={1}
ProjectSetImport.missingSlash=AntProjectSet projectSetFileName missing ''/'', projectSetFileName={0}
ProjectSetImport.antProjectSetProjectInfo=AntProjectSet reference projectName={0} projectLocation={1}
ProjectSetImport.invalidUserIdPasswordPair=ERROR: Must supply both USERID and PASSWORD (or neither).
ProjectSetImport.noUserIdAndPasswordSpecified=ERROR: No USERID and PASSWORD specified.
ProjectSetImport.CVSAuthenticationIncorrect=ERROR: Please make sure USERID and PASSWORD are properly set in the build.xml.
ProjectSetImport.PSFNoUserPasswordSpecified=ERROR: Please make sure to include the USERID:PASSWORD@ key in the PSF file.

# SetDebugInfo
SetDebugInfo.debugInfo=setDebugInfo: LocalVariable={0}, LineNumber={1}, SourceFile={2}.
SetDebugInfo.invalidDebugInfo=setDebugInfo: Invalid DebugInfo={0}, must be \"true\" or \"false\" 
SetDebugInfo.invalidVariableSymbol=setDebugInfo: Invalid VariableSymbol={0}, must be \"true\" or \"false\"
SetDebugInfo.invalidLineNumber=setDebugInfo: Invalid LineNumber{0}, must be \"true\" or \"false\"
SetDebugInfo.invalidSourceFile=setDebugInfo: Invalid SourceFile={0}, must be \"true\" or \"false\"
        
# TargetRuntimeCreate
TargetRuntimeCreate.missingRuntimeTypeId=cannot find runtimeTypeId={0}
TargetRuntimeCreate.createRuntimeException=createRuntime exception={0}
TargetRuntimeCreate.createdWorkingCopy=targetID={0} created workingCopy=null
TargetRuntimeCreate.workingCopySaved=workingCopy.save COMPLETE
TargetRuntimeCreate.badMessage=$$$$$$ IGNORING $$$$$$ Error = {0}
TargetRuntimeCreate.getRuntimeTypeId=GET typeId={0} runtimeType==null
TargetRuntimeCreate.retrievedRuntime1=Retrieved Runtime typeId={0}
TargetRuntimeCreate.retrievedRuntime2=                  name={0}
TargetRuntimeCreate.retrievedRuntime3=                  desc={0}
TargetRuntimeCreate.retrievedRuntime4=                  vendor={0}
TargetRuntimeCreate.retrievedRuntime5=                  version={0}
TargetRuntimeCreate.error=ERROR msg={0}
TargetRuntimeCreate.missingRuntimeLocation=Must supply runtimeLocation
TargetRuntimeCreate.missingTargetId=Must supply targetId
TargetRuntimeCreate.usingDefaultRuntimeTypeId=runtimeTypeId missing, will use ''{0}''
TargetRuntimeCreate.usingDefaultTargetId=runtimeName missing, will use the targetId=''{0}''
TargetRuntimeCreate.invalidName=The runtime name {0} already exists in the workspace with a different location.   
TargetRuntimeCreate.runtimeExists=A runtime with name={0} and location={1} already exists.  Skipping runtime creation. 
		
# WorkspaceBuild
WorkspaceBuild.nullWorkspace=ERROR: workspace==null
WorkspaceBuild.setFileEncoding=Setting file encoding to {0}
WorkspaceBuild.finished=DONE. (errorCount={0})
WorkspaceBuild.unsetFileEncoding=Returning file encoding to {0}

# WorkspaceGetErrors
WorkspaceGetErrors.error=WorkspaceGetErrors:  errors={0} Project={1}
WorkspaceGetErrors.exception=WorkspaceGetErrors: Exception={0}
WorkspaceGetErrors.failOnError=WorkspaceGetErrors FAIL-ON-ERROR.  errorCount={0}  errorMessage[1]={1}
WorkspaceGetErrors.ignoreClosedProject=WorkspaceGetErrors: {0} is not open, IGNORING
WorkspaceGetErrors.showErrors1=[{0}].  Type={1}  Line={2}  Resource={3}
WorkspaceGetErrors.showErrors2=[{0}].. Message={1}
WorkspaceGetErrors.coreException=WorkspaceGetErrors: CoreException: {0}
#WorkspaceGetErrors.failOnError=throw new BuildException("workspaceGetErrors FAIL-ON-ERROR.  errorCount="+errorCount+"  errorMessage[1]="+errMsg );
WorkspaceGetErrors.displayErrors=WorkspaceGetErrors: displayError message={0}
		
#WorkspacePreferenceFile
WorkspacePreferenceFile.finishedImportPreferences=Successfully imported the preferences from the file ''{0}'' into the workspace.
WorkspacePreferenceFile.failedImportPreferences=Failed to import the preferences from the file ''{0}'' into the workspace.						
WorkspacePreferenceFile.keyValue=ProcessPreferenceFile: ANTBUILD. {0}={1}
WorkspacePreferenceFile.invalidOverwriteValue=ProcessPreferenceFile: ERROR: invalid overwrite value (true/false): {0}
WorkspacePreferenceFile.invalidFailOnError=ProcessPreferenceFile: ERROR: invalid failonerror value (true/false): {0}
WorkspacePreferenceFile.unknownBuildPreference=ProcessPreferenceFile: ERROR: (unknown build preference ''{0}'': {1}
WorkspacePreferenceFile.setTargetId=ProcessPreferenceFile: WARNING instead of targetName default, explicitly setting TargetId={0}																																			
WorkspacePreferenceFile.unknownTargetRuntime=ProcessPreferenceFile: ERROR: (unknown targetRuntime key=''{0}'': {1}
WorkspacePreferenceFile.missingRuntimeTypeAndTarget=ProcessPreferenceFile: ERROR: targetRuntime.targetName requires preceding runtimeTypeId and targetLocation
WorkspacePreferenceFile.missingSeparator=ProcessPreferenceFile: ERROR: (MISSING ''='' or ''.''): {0}
WorkspacePreferenceFile.comment=ProcessPreferenceFile:  comment={0}
WorkspacePreferenceFile.ioException=ProcessPreferenceFile: IOException opening reader for filename={0}
WorkspacePreferenceFile.closeBufferException=ProcessPreferenceFile: closeBufferReader IOException={0}
WorkspacePreferenceFile.missingPreferenceFileName=ERROR: Must supply preferenceFileName
WorkspacePreferenceFile.preferenceFileIsNotAFile=ERROR: The preferenceFileName ''{0}'' is not a file.
WorkspacePreferenceFile.preferenceFileDoesNotExist=ERROR: The preferenceFileName ''{0}'' does not exist.
WorkspacePreferenceFile.preferenceFileCannotBeOpened=ERROR: The preferenceFileName ''{0}'' cannot be opened for reading.
	
# WorkspacePreferenceGet
WorkspacePreferenceGet.nullWorkspace=WorkspacePreferenceGet: workspace==null
WorkspacePreferenceGet.webToolsValidation=WorkspacePreferenceGet: webtoolsValidation (requires v5.1 or later, else JspValidationCorePlugin ClassNotFoundException
WorkspacePreferenceGet.logPreferences=WorkspacePreferenceGet: ERROR: preferenceType={0} preferenceName={1} preferenceValue==null
WorkspacePreferenceGet.finished=WorkspacePreferenceGet: DONE. {0}={1} propertyName={2}
WorkspacePreferenceGet.defaultPreferencesScope=DEBUG: Attribute ''preferenceScopes'' is not defined.  Using the ''{0}'' scope for backwards compatibility
WorkspacePreferenceGet.defaultPreferenceQualifier=DEBUG: Attribute 'preferenceQualifier' is not defined.  Setting to an empty string for backwards compatibility											
WorkspacePreferenceGet.displayPreferenceValue=The preference ''{0}'' is set to ''{1}'' and is stored in the Ant property ''{2}''.
WorkspacePreferenceGet.preferenceNotInWorkspace=The preference ''{0}'' does not exist in the workspace preferences.
WorkspacePreferenceGet.missingPreferenceType=WorkspacePreferenceGet: Must supply preferenceType (compiler or classpathVariable).  If you wish to enable support for all Eclipse-based preferences then set the ''{0}'' property to true in the ''{1}'' project.
WorkspacePreferenceGet.unknownPreferenceType=WorkspacePreferenceGet: INFORMATION: Unknown (not ''compiler'' nor ''classpathVariable'' nor ''classpath'' nor ''builder'' nor ''webtoolsValidation'') preferenceType={0}
WorkspacePreferenceGet.missingPreferenceName=ERROR: Must supply the preference name.																								
WorkspacePreferenceGet.missingPropertyName=ERROR: Must supply an Ant property name to store the resulting preference value.
	
# WorkspacePreferenceSet
WorkspacePreferenceSet.nullWorkspae=WorkspacePreferenceSet: ERROR: workspace==null
WorkspacePreferenceSet.webToolsValidation=WorkspacePreferenceGet: webtoolsValidation (requires v5.1 or later, else JspValidationCorePlugin ClassNotFoundException)	
WorkspacePreferenceSet.overwriteFailed=WorkspacePreferenceSet: overwrite==false FAILED preferenceType={0} preferenceName={1} preferenceValue={2}
WorkspacePreferenceSet.overwriteSkipped=WorkspacePreferenceSet: overwrite==false SKIPPED preferenceType={0} preferenceName={1} preferenceValue={2} RETAINED preference{3}							
WorkspacePreferenceSet.finished=WorkspacePreferenceSet: DONE. {0}={1}						
WorkspacePreferenceSet.defaultPreferenceScope=DEBUG: Attribute ''preferenceScope'' is not defined.  Using the ''{0}'' scope for backwards compatibility											
WorkspacePreferenceSet.defaultPreferenceQualifier=DEBUG: Attribute 'preferenceQualifier' is not defined.  Setting to an empty string for backwards compatibility
WorkspacePreferenceSet.successfulPreferenceSet=The preference ''{0}'' is successfully set to the value ''{1}'' in the preference node ''{2}''.
WorkspacePreferenceSet.failedPreferenceSet=The preference ''{0}'' failed to be set to the value ''{1}'' in the preference node ''{2}''.						
WorkspacePreferenceSet.missingPreferenceType=WorkspacePreferenceSet: Must supply preferenceType (compiler or classpathVariable).  If you wish to enable support for all Eclipse-based preferences then set the ''{0}'' property to true in the ''{1}'' project.
WorkspacePreferenceSet.unknownPreferenceType=WorkspacePreferenceSet: INFORMATION: Unknown (not ''compiler'' nor ''classpathVariable'' nor ''classpath'' nor ''builder'' nor ''webtoolsValidation'') preferenceType={0}						
WorkspacePreferenceSet.missingPreferenceName=ERROR: Must supply the preference name						
WorkspacePreferenceSet.missingPreferenceValue=ERROR: Must supply the preference value					
	
# EJBExport		
EJBExport.missingProject=EJBExport: {0} not found in Workspace.
EJBExport.notAnEJBProject=Specified project \"{0}\" is not an EJB Project
EJBExport.fileExists=File {0} already exists.
EJBExport.finished=EJBExport completed to {0}
EJBExport.coreException=exception.CoreException: {0}
EJBExport.executionException=exception.ExecutionException: {0}
EJBExport.misingProjectName=Missing parameter ejbProjectName.{0}
EJBExport.missingExportFile=Missing parameter ejbExportFile.
EJBExport.invalidExportFile=Invalid EJB Export filename. Filename must have an \"jar\" extension.

# ApplicationClientExport
ApplicationClientExport.missingProject=AppClientExport: {0} not found in Workspace.
ApplicationClientExport.notAnAppClientProject=Specified project \"{0}\" is not an Application Client Project
ApplicationClientExport.fileExists=File {0} already exists.
ApplicationClientExport.finished=AppClientExport completed to {0}
ApplicationClientExport.coreException=exception.CoreException:{0}
ApplicationClientExport.executionException=exception.ExecutionException:{0}	
ApplicationClientExport.missingProjectName=Missing parameter appClientProjectName.
ApplicationClientExport.missingExportFile=Missing parameter appClientExportFile.
ApplicationClientExport.invalidExportFile=Invalid Application Client Export filename. Filename must have an \"jar\" extension.

# BuildApplicationUtilJar
BuildApplicationUtilJar.notAnEnterpriseProject=Specified project \"{0}\" is not an Enterprise Application Project
BuildApplicationUtilJar.notAJavaProject=Specified project \"{0}\" is not a Java Project
BuildApplicationUtilJar.notAnEnterpriseApplicationUtilityProject=Specified project \"{0}\" is not an Enterprise Application Utility Project
BuildApplicationUtilJar.fileExists=File {0} already exists.
BuildApplicationUtilJar.finished=BuildApplicationUtilJar completed to {0}
BuildApplicationUtilJar.coreException=exception.CoreException:{0}
BuildApplicationUtilJar.openFailureException=exception.OpenFailureException:{0}
BuildApplicationUtilJar.saveFailureException=exception.SaveFailureException:{0}
BuildApplicationUtilJar.missingJavaProject=Java Project not specified
BuildApplicationUtilJar.missingEarProject=EAR Project not specified
BuildApplicationUtilJar.missingJarFilename=JAR filename not specified
BuildApplicationUtilJar.invalidPath=JAR filename/path cannot be absolute
BuildApplicationUtilJar.addJarToEar=Adding Java archive {0} to Enterprise Application Project {1}

# EARExport
EARExport.missingProject=EARExport: {0} not found in Workspace.
EARExport.notAnEnterpriseProject=Specified project \"{0}\" is not an Enterprise Application Project
EARExport.fileExists=File {0} already exists.
EARExport.finished=EARExport completed to {0}
EARExport.sharedSource=Option: 'exportSource' is ignored and will always be considered 'true' when option: 'shared' is 'true'
EARExport.coreException=exception.CoreException:{0}
EARExport.executionException=exception.ExecutionException:{0}
EARExport.missingProjectName=Missing parameter earProjectName.
EARExport.missingExportfile=Missing parameter earExportFile.
EARExport.invalidExportFile=Invalid EAR Export filename. Filename must have an \"ear\" extension.

# EARImport
EARImport.missingEarFileParam=Missing parameter earFile.
EARImport.missingEarFile=Can not find file {0} for import.
EARImport.executionException=exception.ExecutionException:{0}
EARImport.finished=EARImport completed from file {0}
EARImport.sharedUtilities=Option: 'withUtilityJars' is ignored and will always be considered 'false' when option 'shared' is 'true'.
EARImport.missingRuntime=The target runtime identified by {0} does not exist.

# WARExport
WARExport.missingProject=WARExport:{0} not found in Workspace.
WARExport.notAWebProject=Specified project \"{0}\" is not an Web Project
WARExport.fileExists=File {0} already exists.
WARExport.finished=WARExport completed to {0}
WARExport.coreException=exception.CoreException:{0}
WARExport.executionException=exception.ExecutionException:{0}
WARExport.missingProjectName=Missing parameter warProjectName.
WARExport.missingExportFile=Missing parameter warExportFile.
WARExport.invalidExportFile=Invalid WAR Export filename. Filename must have an \"war\" extension.

# Prepare for Deployment
PrepareForDeployment.missingProjectName=Missing parameter projectName.
PrepareForDeployment.missingProject=Prepare for Deployment: {0} not found in the workspace. 
PrepareForDeployment.executionException=Prepare for Deployment failed with the following error: {0}
PrepareForDeployment.execute=Running ''Prepare for Deployment'' on project: {0}

# XML Catalog
XMLCatalog.saveFailure=An error occurred while saving the XML Catalog file: {0}
XMLCatalog.missingNextCatalogOrKey=Missing required parameters catalogLocation or key for modifying the XML catalog.
XMLCatalog.missingUserCatalogUri=The parameter uri is required when adding a new user_catalog entry in the XML catalog.
XMLCatalog.missingUserCatalogKeyType=The parameter keyType is required when adding a new user_catalog entry in the XML catalog.
XMLCatalog.invalidKeyType=The keyType value of \"{0}\" is invalid.  Valid values are: ''public'', ''system'', or ''uri''.
XMLCatalog.invalidWebUrlUsage=The webUrl attribute is only valid when the keyType is set to 'public' so it will be ignored.
XMLCatalog.invalidNextCatalogLocation=The location of the next catalog entry does not exist: {0}
XMLCatalog.saveCatalogFile=Saving XML catalog file: {0}
XMLCatalog.addNextCatalogSuccess=Successfully added the next catalog location \"{0}\" to the XML Catalog \"{1}\"
XMLCatalog.addUserCatalogSuccess=Successfully added a new entry to the XML user_catalog: {0}
XMLCatalog.malformedURI=The uri value of \"{0}\" is invalid. Please provide a valid URI. 
XMLCatalog.invalidFile=The file \"{0}\" specified by uri attribute does not exist.

# ValidationPreference
ValidationPreference.unknownAction=ValidationPreference: unknown action (show, set, enableAll, disableAll, restoreDefault)
ValidationPreference.missingProject=ERROR: {0} not found in Workspace.
ValidationPreference.projectNotOpen=ERROR: {0} is not open
ValidationPreference.displayValidation1=Displaying global validation information.	
ValidationPreference.displayValidation2=Version              = {0}
ValidationPreference.displayValidation3=disableAllValidation = {0}
ValidationPreference.displayValidation4=SaveAutomatically    = {0}
ValidationPreference.displayValidation5=canProjectsOverride  = {0}			
ValidationPreference.displayValidation6=-- List of Global validator -------
ValidationPreference.displayValidation7=====================================
ValidationPreference.displayValidation8=Displaying project validation information for project {0}.
ValidationPreference.displayValidation9=Version              = {0}
ValidationPreference.displayValidation10=disableAllValidation = {0}
ValidationPreference.displayValidation11=useGlobalPreference  = {0}
ValidationPreference.displayValidation12=doesProjectOverride  = {0}				
ValidationPreference.displayValidation13=-- List of Project validator -------
ValidationPreference.displayValidation14={0}) [Manual:{1}] [Build:{2}]  {3}({4})
ValidationPreference.enableAllValidators=Enabling all validators
ValidationPreference.disableAllValidators=Disabling all validators
ValidationPreference.settingValidators=Setting validators
ValidationPreference.enableValidator=Enabling {0} validator {1}
ValidationPreference.disableValidator=Disabling {0} validator {1}
ValidationPreference.missingValidatorWorkspace=ERROR: validator {0} not found in Workspace.
ValidationPreference.missingValidatorProject=ERROR: validator {0} not found in project {1}.
ValidationPreference.setDisableAllValidation=Setting global disableAllValidation to {0}
ValidationPreference.setDisableAllValidationProject=Setting disableAllValidation to {0} for project {1}
ValidationPreference.setGlobalProjectOverride=Setting global projectOverride to {0}
ValidationPreference.setProjectOverride=Setting projectOverride to {0} for project {1}
ValidationPreference.restoreGlobalValidatorSetting=Restoring default global validator setting
ValidationPreference.restoreDefaultProjectValidatorSetting=Restoring default project validator setting for project {0}

#WorkspacePreferenceExport
WorkspacePreferenceExport.missingFileName=Missing parameter preferenceFileName. 
WorkspacePreferenceExport.fileExists=The preference file, {0}, exists and overwrite has not been specified.  
WorkspacePreferenceExport.fileReadOnly=The preference file, {0}, is read only.
WorkspacePreferenceExport.file=Exporting preferences to file: {0}
WorkspacePreferenceExport.spaceBeforeFileName=There is a space before the parameter preferenceFileName.